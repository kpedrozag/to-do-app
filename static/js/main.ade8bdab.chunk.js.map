{"version":3,"sources":["components/Navbar/Navbar.js","components/MainContent/MainContent.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["component","props","handleClickOption","breakAt","Brand","grow","collapsible","href","onClick","color","title","eventKey","separator","tasks","description","Task","state","showModal","open","bind","close","this","setState","index","Fragment","className","centered","hideOnOutsideClick","show","onHide","Header","closeButton","Title","Body","React","Component","renderedTaks","map","task","ArchivedContent","App","currentContent","value","Navbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ade8bdab.chunk.js","sourcesContent":["import { Navbar, Nav, DropdownButton, DropdownItem, Avatar } from 'emerald-ui';\n\nfunction component(props) {\n  const { handleClickOption } = props;\n  return (\n    <Navbar breakAt=\"sm\">\n      <Navbar.Brand>\n        <h2>My To-Do App</h2>\n      </Navbar.Brand>\n      <Nav grow collapsible>\n        <a\n          href=\"/\"\n          onClick={() => {\n            handleClickOption('main');\n          }}\n        >\n          My tasks\n        </a>\n        <a\n          href=\"/archived\"\n          onClick={() => {\n            handleClickOption('archived');\n          }}\n        >\n          Archived tasks\n        </a>\n      </Nav>\n      <Nav collapsible>\n        <DropdownButton color=\"warning\" title={<Avatar title=\"KP\" />}>\n          <DropdownItem eventKey=\"1\">My account</DropdownItem>\n          <DropdownItem separator />\n          <DropdownItem eventKey=\"2\">Sign out</DropdownItem>\n        </DropdownButton>\n      </Nav>\n    </Navbar>\n  );\n}\nexport default component;\n","import React from 'react';\nimport { Card, Modal } from 'emerald-ui';\nimport './MainContent.css';\n\nconst tasks = [\n  {\n    title: 'Task1',\n    description:\n      'This my task 1. This my task 1. This my task 1. This my task 1. This my task 1. This my task 1. This my task 1. '\n  },\n  {\n    title: 'Task2',\n    description: 'This my task 2'\n  }\n];\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false\n    };\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n  }\n\n  open() {\n    this.setState({ showModal: true });\n  }\n\n  close() {\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    const { index, title, description } = this.props;\n    return (\n      <React.Fragment>\n        <Card className=\"task\" key={index} onClick={this.open}>\n          <div className=\"task-title\">\n            <h3>{title}</h3>\n          </div>\n          <div className=\"task-description\">\n            <p>{description}</p>\n          </div>\n        </Card>\n        <Modal\n          centered\n          hideOnOutsideClick\n          show={this.state.showModal}\n          onHide={this.close}\n        >\n          <Modal.Header closeButton={true}>\n            <Modal.Title>\n              <h1>{title}</h1>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <h2>Description</h2>\n            <p>{description}</p>\n          </Modal.Body>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction component() {\n  const renderedTaks = tasks.map((task, index) => (\n    <Task {...task} index={index} />\n  ));\n  return (\n    <div className=\"main-content-container\">\n      <Card className=\"tasks input-tasks\">\n        <Card.Header color=\"warning\">\n          <h1>Input</h1>\n        </Card.Header>\n        <div className=\"tasks-container\">{renderedTaks}</div>\n      </Card>\n      <Card className=\"tasks progress-tasks\">\n        <Card.Header>\n          <h1>In-Progress</h1>\n        </Card.Header>\n        <div className=\"tasks-container\">{renderedTaks}</div>\n      </Card>\n      <Card className=\"tasks done-tasks\">\n        <Card.Header color=\"success\">\n          <h1>Done</h1>\n        </Card.Header>\n        <div className=\"tasks-container\">{renderedTaks}</div>\n      </Card>\n    </div>\n  );\n}\nexport default component;\n","import React from 'react';\nimport Navbar from '../Navbar';\nimport MainContent from '../MainContent';\n\nimport 'emerald-ui/lib/styles.css';\n\nfunction ArchivedContent() {\n  return <h1>I am the archived notes</h1>;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentContent: 'main'\n    };\n    this.handleClickOption = this.handleClickOption.bind(this);\n  }\n\n  handleClickOption(value) {\n    this.setState({ currentContent: value || 'main' });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar handleClickOption={this.handleClickOption} />\n        {this.state.currentContent === 'main' ? (\n          <MainContent />\n        ) : (\n          <ArchivedContent />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}